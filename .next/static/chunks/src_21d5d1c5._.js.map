{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/IngredientInput.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState } from \"react\"\n\ninterface IngredientInputProps {\n  value: string\n  onChange: (value: string) => void\n  onSubmit: () => void\n  loading?: boolean\n}\n\nconst IngredientInput: React.FC<IngredientInputProps> = ({ \n  value, \n  onChange, \n  onSubmit, \n  loading = false \n}) => {\n  const [focused, setFocused] = useState(false)\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    onSubmit()\n  }\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault()\n      onSubmit()\n    }\n  }\n\n  return (\n    <div className=\"w-full\">\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div className=\"space-y-2\">\n          <label \n            htmlFor=\"ingredients\" \n            className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n          >\n            Available Ingredients\n          </label>\n          <div className=\"relative\">\n            <textarea\n              id=\"ingredients\"\n              className={`flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 resize-none transition-all ${\n                focused ? 'border-primary' : ''\n              }`}\n              placeholder=\"Enter your ingredients separated by commas (e.g., chicken, tomatoes, basil, garlic, onion)\"\n              value={value}\n              onChange={(e) => onChange(e.target.value)}\n              onKeyPress={handleKeyPress}\n              onFocus={() => setFocused(true)}\n              onBlur={() => setFocused(false)}\n              disabled={loading}\n              rows={3}\n            />\n          </div>\n          <p className=\"text-xs text-muted-foreground\">\n            💡 Tip: The more ingredients you add, the better recipe suggestions you'll get!\n          </p>\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={loading || !value.trim()}\n          className=\"w-full inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2\"\n        >\n          {loading ? (\n            <>\n              <div className=\"mr-2 h-4 w-4 animate-spin rounded-full border-2 border-current border-t-transparent\"></div>\n              Generating Recipes...\n            </>\n          ) : (\n            \"Generate Recipes\"\n          )}\n        </button>\n      </form>\n\n      {/* Ingredient Tags Preview */}\n      {value.trim() && (\n        <div className=\"mt-4 p-3 bg-muted rounded-md\">\n          <p className=\"text-xs font-medium text-muted-foreground mb-2\">Ingredients to use:</p>\n          <div className=\"flex flex-wrap gap-2\">\n            {value.split(',').map((ingredient, index) => {\n              const trimmed = ingredient.trim()\n              if (!trimmed) return null\n              return (\n                <span\n                  key={index}\n                  className=\"inline-flex items-center rounded-full bg-background px-2.5 py-0.5 text-xs font-medium text-foreground border\"\n                >\n                  {trimmed}\n                </span>\n              )\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default IngredientInput\n"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAWA,MAAM,kBAAkD,CAAC,EACvD,KAAK,EACL,QAAQ,EACR,QAAQ,EACR,UAAU,KAAK,EAChB;;IACC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,IAAI,EAAE,GAAG,KAAK,WAAW,CAAC,EAAE,QAAQ,EAAE;YACpC,EAAE,cAAc;YAChB;QACF;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,SAAQ;gCACR,WAAU;0CACX;;;;;;0CAGD,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCACC,IAAG;oCACH,WAAW,CAAC,gUAAgU,EAC1U,UAAU,mBAAmB,IAC7B;oCACF,aAAY;oCACZ,OAAO;oCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oCACxC,YAAY;oCACZ,SAAS,IAAM,WAAW;oCAC1B,QAAQ,IAAM,WAAW;oCACzB,UAAU;oCACV,MAAM;;;;;;;;;;;0CAGV,6LAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;;kCAK/C,6LAAC;wBACC,MAAK;wBACL,UAAU,WAAW,CAAC,MAAM,IAAI;wBAChC,WAAU;kCAET,wBACC;;8CACE,6LAAC;oCAAI,WAAU;;;;;;gCAA4F;;2CAI7G;;;;;;;;;;;;YAML,MAAM,IAAI,oBACT,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAE,WAAU;kCAAiD;;;;;;kCAC9D,6LAAC;wBAAI,WAAU;kCACZ,MAAM,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,YAAY;4BACjC,MAAM,UAAU,WAAW,IAAI;4BAC/B,IAAI,CAAC,SAAS,OAAO;4BACrB,qBACE,6LAAC;gCAEC,WAAU;0CAET;+BAHI;;;;;wBAMX;;;;;;;;;;;;;;;;;;AAMZ;GAzFM;KAAA;uCA2FS","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/RecipeCard.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState } from \"react\"\n\ninterface Recipe {\n  id: string\n  title: string\n  description: string\n  ingredients: string[]\n  cookingTime?: string\n  servings?: number\n}\n\ninterface RecipeCardProps {\n  recipe: Recipe\n  onSave: (recipe: Recipe) => void\n  isSaved?: boolean\n}\n\nconst RecipeCard: React.FC<RecipeCardProps> = ({ recipe, onSave, isSaved = false }) => {\n  const [rating, setRating] = useState<number>(0)\n  const [isRating, setIsRating] = useState(false)\n  const [showFullIngredients, setShowFullIngredients] = useState(false)\n\n  const handleSave = async () => {\n    try {\n      onSave(recipe)\n      \n      // If user has rated, save the rating\n      if (rating > 0) {\n        const res = await fetch(\"/api/rating\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ recipeId: recipe.id, rating }),\n        })\n        \n        if (!res.ok) {\n          console.error(\"Failed to save rating\")\n        }\n      }\n    } catch (err) {\n      console.error(\"Error saving recipe:\", err)\n    }\n  }\n\n  const handleRatingClick = (star: number) => {\n    setRating(star)\n    setIsRating(true)\n    setTimeout(() => setIsRating(false), 300)\n  }\n\n  const displayIngredients = showFullIngredients \n    ? recipe.ingredients \n    : recipe.ingredients.slice(0, 5)\n\n  return (\n    <div className=\"group relative overflow-hidden rounded-lg border bg-card text-card-foreground shadow-sm transition-all hover:shadow-md\">\n      <div className=\"p-6\">\n        {/* Header */}\n        <div className=\"flex items-start justify-between mb-3\">\n          <div className=\"flex-1\">\n            <h3 className=\"font-semibold text-lg leading-tight mb-1 group-hover:text-primary transition-colors\">\n              {recipe.title}\n            </h3>\n            <div className=\"flex items-center gap-3 text-xs text-muted-foreground\">\n              {recipe.cookingTime && (\n                <span className=\"flex items-center gap-1\">\n                  🕒 {recipe.cookingTime}\n                </span>\n              )}\n              {recipe.servings && (\n                <span className=\"flex items-center gap-1\">\n                  👥 {recipe.servings} servings\n                </span>\n              )}\n            </div>\n          </div>\n          {isSaved && (\n            <div className=\"flex items-center justify-center w-8 h-8 rounded-full bg-primary/10 text-primary\">\n              ✓\n            </div>\n          )}\n        </div>\n\n        {/* Description */}\n        <p className=\"text-sm text-muted-foreground mb-4 leading-relaxed\">\n          {recipe.description}\n        </p>\n\n        {/* Ingredients */}\n        <div className=\"mb-4\">\n          <h4 className=\"text-sm font-medium mb-2\">Ingredients:</h4>\n          <div className=\"space-y-1\">\n            {displayIngredients.map((ingredient, index) => (\n              <div key={index} className=\"flex items-center text-xs text-muted-foreground\">\n                <span className=\"w-1 h-1 bg-muted-foreground rounded-full mr-2 flex-shrink-0\"></span>\n                {ingredient}\n              </div>\n            ))}\n            {recipe.ingredients.length > 5 && (\n              <button\n                onClick={() => setShowFullIngredients(!showFullIngredients)}\n                className=\"text-xs text-primary hover:underline mt-1\"\n              >\n                {showFullIngredients \n                  ? \"Show less\" \n                  : `+${recipe.ingredients.length - 5} more ingredients`\n                }\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Rating */}\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center gap-1\">\n            <span className=\"text-xs text-muted-foreground mr-1\">Rate:</span>\n            {[1, 2, 3, 4, 5].map((star) => (\n              <button\n                key={star}\n                onClick={() => handleRatingClick(star)}\n                className={`text-lg transition-all hover:scale-110 ${\n                  star <= rating \n                    ? \"text-yellow-500\" \n                    : \"text-muted-foreground hover:text-yellow-400\"\n                } ${isRating ? \"animate-pulse\" : \"\"}`}\n                disabled={isSaved}\n              >\n                {star <= rating ? \"★\" : \"☆\"}\n              </button>\n            ))}\n          </div>\n          {rating > 0 && (\n            <span className=\"text-xs text-muted-foreground\">\n              {rating}/5 stars\n            </span>\n          )}\n        </div>\n\n        {/* Action Button */}\n        <button\n          onClick={handleSave}\n          disabled={isSaved}\n          className={`w-full inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 h-9 px-3 ${\n            isSaved\n              ? \"bg-muted text-muted-foreground cursor-not-allowed\"\n              : \"bg-primary text-primary-foreground hover:bg-primary/90\"\n          }`}\n        >\n          {isSaved ? (\n            <>\n              <span className=\"mr-2\">✓</span>\n              Saved\n            </>\n          ) : (\n            <>\n              <span className=\"mr-2\">💾</span>\n              Save Recipe\n            </>\n          )}\n        </button>\n      </div>\n\n      {/* Hover Effect */}\n      <div className=\"absolute inset-0 bg-gradient-to-r from-primary/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none\" />\n    </div>\n  )\n}\n\nexport default RecipeCard\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/GroceryList.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState } from \"react\"\n\ninterface GroceryListProps {\n  items: string[]\n}\n\nconst GroceryList: React.FC<GroceryListProps> = ({ items }) => {\n  const [checkedItems, setCheckedItems] = useState<Set<number>>(new Set())\n  const [showChecked, setShowChecked] = useState(true)\n\n  const handleItemCheck = (index: number) => {\n    const newCheckedItems = new Set(checkedItems)\n    if (newCheckedItems.has(index)) {\n      newCheckedItems.delete(index)\n    } else {\n      newCheckedItems.add(index)\n    }\n    setCheckedItems(newCheckedItems)\n  }\n\n  const handleDownload = () => {\n    const content = items.map((item, index) => \n      `${checkedItems.has(index) ? '✓' : '☐'} ${item}`\n    ).join('\\n')\n    \n    const blob = new Blob([content], { type: 'text/plain' })\n    const url = URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = 'grocery-list.txt'\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n    URL.revokeObjectURL(url)\n  }\n\n  const handleClearChecked = () => {\n    setCheckedItems(new Set())\n  }\n\n  const checkedCount = checkedItems.size\n  const totalCount = items.length\n\n  if (!items || items.length === 0) {\n    return (\n      <div className=\"text-center py-8\">\n        <div className=\"text-4xl mb-4\">🛒</div>\n        <p className=\"text-muted-foreground\">No items in your grocery list yet.</p>\n        <p className=\"text-sm text-muted-foreground mt-2\">\n          Save some recipes to generate your grocery list!\n        </p>\n      </div>\n    )\n  }\n\n  const displayItems = showChecked ? items : items.filter((_, index) => !checkedItems.has(index))\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h3 className=\"text-2xl font-semibold flex items-center gap-2\">\n            🛒 Grocery List\n          </h3>\n          <p className=\"text-sm text-muted-foreground mt-1\">\n            {checkedCount > 0 ? (\n              <>\n                {checkedCount} of {totalCount} items checked\n                {checkedCount === totalCount && \" - All done! 🎉\"}\n              </>\n            ) : (\n              `${totalCount} items to shop for`\n            )}\n          </p>\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          <button\n            onClick={() => setShowChecked(!showChecked)}\n            className=\"text-xs px-3 py-1 rounded-full border border-input bg-background hover:bg-accent hover:text-accent-foreground transition-colors\"\n          >\n            {showChecked ? \"Hide Checked\" : \"Show All\"}\n          </button>\n          <button\n            onClick={handleDownload}\n            className=\"text-xs px-3 py-1 rounded-full bg-primary text-primary-foreground hover:bg-primary/90 transition-colors\"\n          >\n            📥 Download\n          </button>\n        </div>\n      </div>\n\n      {/* Progress Bar */}\n      {totalCount > 0 && (\n        <div className=\"w-full bg-muted rounded-full h-2\">\n          <div\n            className=\"bg-primary h-2 rounded-full transition-all duration-300 ease-out\"\n            style={{ width: `${(checkedCount / totalCount) * 100}%` }}\n          />\n        </div>\n      )}\n\n      {/* Action Buttons */}\n      {checkedCount > 0 && (\n        <div className=\"flex justify-end\">\n          <button\n            onClick={handleClearChecked}\n            className=\"text-xs text-muted-foreground hover:text-foreground transition-colors\"\n          >\n            Clear all checked items\n          </button>\n        </div>\n      )}\n\n      {/* Items List */}\n      <div className=\"space-y-2\">\n        {displayItems.length === 0 ? (\n          <div className=\"text-center py-8 text-muted-foreground\">\n            <p>All items are checked! 🎉</p>\n            <button\n              onClick={() => setShowChecked(true)}\n              className=\"text-primary hover:underline text-sm mt-2\"\n            >\n              Show checked items\n            </button>\n          </div>\n        ) : (\n          <div className=\"grid gap-2\">\n            {displayItems.map((item, displayIndex) => {\n              const originalIndex = showChecked \n                ? displayIndex \n                : items.findIndex((originalItem, idx) => \n                    originalItem === item && !checkedItems.has(idx)\n                  )\n              const actualIndex = showChecked ? displayIndex : items.indexOf(item)\n              const isChecked = checkedItems.has(actualIndex)\n              \n              return (\n                <div\n                  key={`${item}-${actualIndex}`}\n                  className={`flex items-center space-x-3 p-3 rounded-lg border transition-all hover:bg-accent/50 ${\n                    isChecked \n                      ? \"bg-muted/50 text-muted-foreground\" \n                      : \"bg-background\"\n                  }`}\n                >\n                  <button\n                    onClick={() => handleItemCheck(actualIndex)}\n                    className={`flex items-center justify-center w-5 h-5 rounded border-2 transition-all ${\n                      isChecked\n                        ? \"bg-primary border-primary text-primary-foreground\"\n                        : \"border-input hover:border-primary\"\n                    }`}\n                  >\n                    {isChecked && <span className=\"text-xs\">✓</span>}\n                  </button>\n                  \n                  <span \n                    className={`flex-1 transition-all ${\n                      isChecked ? \"line-through\" : \"\"\n                    }`}\n                  >\n                    {item}\n                  </span>\n                  \n                  {isChecked && (\n                    <span className=\"text-xs text-muted-foreground\">✓</span>\n                  )}\n                </div>\n              )\n            })}\n          </div>\n        )}\n      </div>\n\n      {/* Summary */}\n      <div className=\"mt-6 p-4 bg-muted/50 rounded-lg\">\n        <div className=\"flex items-center justify-between text-sm\">\n          <span className=\"text-muted-foreground\">Shopping Progress</span>\n          <span className=\"font-medium\">\n            {checkedCount}/{totalCount} items\n          </span>\n        </div>\n        {checkedCount === totalCount && totalCount > 0 && (\n          <p className=\"text-xs text-primary mt-2\">\n            🎉 Congratulations! You've got everything on your list!\n          </p>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default GroceryList\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 800, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport IngredientInput from \"../components/IngredientInput\"\nimport RecipeCard from \"../components/RecipeCard\"\nimport GroceryList from \"../components/GroceryList\"\n\ninterface Recipe {\n  id: string\n  title: string\n  description: string\n  ingredients: string[]\n  cookingTime?: string\n  servings?: number\n}\n\nexport default function HomePage() {\n  const [ingredients, setIngredients] = useState<string>(\"\")\n  const [recipes, setRecipes] = useState<Recipe[]>([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [groceryList, setGroceryList] = useState<string[] | null>(null)\n  const [savedRecipes, setSavedRecipes] = useState<Recipe[]>([])\n\n  const handleGenerateRecipes = async () => {\n    if (!ingredients.trim()) {\n      setError(\"Please enter at least one ingredient.\")\n      return\n    }\n\n    setError(null)\n    setLoading(true)\n\n    try {\n      const ingredientList = ingredients.split(\",\").map(i => i.trim()).filter(i => i)\n      \n      const res = await fetch(\"/api/recipes\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ ingredients: ingredientList }),\n      })\n\n      if (!res.ok) {\n        throw new Error(\"Failed to fetch recipes. Please try again.\")\n      }\n\n      const data = await res.json()\n      setRecipes(data.recipes || [])\n    } catch (err: any) {\n      setError(err.message || \"An error occurred while fetching recipes.\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleGenerateGroceryList = async () => {\n    if (savedRecipes.length === 0) {\n      setError(\"Please save some recipes first to generate a grocery list.\")\n      return\n    }\n\n    setError(null)\n    setLoading(true)\n\n    try {\n      const res = await fetch(\"/api/grocery\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ recipes: savedRecipes }),\n      })\n\n      if (!res.ok) {\n        throw new Error(\"Failed to generate grocery list.\")\n      }\n\n      const data = await res.json()\n      setGroceryList(data.groceryList || [])\n    } catch (err: any) {\n      setError(err.message || \"An error occurred while generating the grocery list.\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleSaveRecipe = (recipe: Recipe) => {\n    setSavedRecipes(prev => {\n      const exists = prev.find(r => r.id === recipe.id)\n      if (exists) return prev\n      return [...prev, recipe]\n    })\n  }\n\n  const handleRemoveSavedRecipe = (recipeId: string) => {\n    setSavedRecipes(prev => prev.filter(r => r.id !== recipeId))\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl font-bold tracking-tight mb-4\">\n            Recipe Generator & Grocery List\n          </h1>\n          <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n            Enter your available ingredients and discover delicious recipes. Save your favorites and generate a grocery list for your next shopping trip.\n          </p>\n        </div>\n\n        {/* Ingredient Input Section */}\n        <div className=\"mb-8\">\n          <div className=\"max-w-2xl mx-auto\">\n            <IngredientInput \n              value={ingredients} \n              onChange={setIngredients}\n              onSubmit={handleGenerateRecipes}\n              loading={loading}\n            />\n          </div>\n        </div>\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"max-w-2xl mx-auto mb-8\">\n            <div className=\"bg-destructive/15 text-destructive px-4 py-3 rounded-md\">\n              {error}\n            </div>\n          </div>\n        )}\n\n        {/* Recipe Results */}\n        {recipes.length > 0 && (\n          <div className=\"mb-12\">\n            <h2 className=\"text-2xl font-semibold mb-6\">Recipe Suggestions</h2>\n            <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n              {recipes.map((recipe) => (\n                <RecipeCard\n                  key={recipe.id}\n                  recipe={recipe}\n                  onSave={handleSaveRecipe}\n                  isSaved={savedRecipes.some(r => r.id === recipe.id)}\n                />\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Saved Recipes Section */}\n        {savedRecipes.length > 0 && (\n          <div className=\"mb-12\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h2 className=\"text-2xl font-semibold\">Saved Recipes ({savedRecipes.length})</h2>\n              <button\n                onClick={handleGenerateGroceryList}\n                disabled={loading}\n                className=\"px-6 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n              >\n                {loading ? \"Generating...\" : \"Generate Grocery List\"}\n              </button>\n            </div>\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n              {savedRecipes.map((recipe) => (\n                <div key={recipe.id} className=\"border rounded-lg p-4 bg-card\">\n                  <div className=\"flex items-start justify-between mb-2\">\n                    <h3 className=\"font-semibold\">{recipe.title}</h3>\n                    <button\n                      onClick={() => handleRemoveSavedRecipe(recipe.id)}\n                      className=\"text-muted-foreground hover:text-destructive transition-colors\"\n                    >\n                      ✕\n                    </button>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground mb-2\">{recipe.description}</p>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Ingredients: {recipe.ingredients.slice(0, 3).join(\", \")}\n                    {recipe.ingredients.length > 3 && \"...\"}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Grocery List Section */}\n        {groceryList && (\n          <div className=\"mb-12\">\n            <GroceryList items={groceryList} />\n          </div>\n        )}\n\n        {/* Loading State */}\n        {loading && recipes.length === 0 && (\n          <div className=\"text-center py-12\">\n            <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n            <p className=\"mt-4 text-muted-foreground\">Generating recipes...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}